// Import.
const assert = require('assert');
const CColor = require('ccolor');
const saltedSha512 = require('./index');

// Test data.
const testDataList = [
  { data: 'Some data.', salt: undefined, correctResult: '167f6c486ce06c3b99d64dd4b9e8bd05cf1b7269be13fbc1ed0df7b5a4538ff9c8d9af3168f98a45067bbfb8a7ef40ace610866188c3370c9a03a51663718bf1' },
  { data: 'Some data.', salt: '', correctResult: '167f6c486ce06c3b99d64dd4b9e8bd05cf1b7269be13fbc1ed0df7b5a4538ff9c8d9af3168f98a45067bbfb8a7ef40ace610866188c3370c9a03a51663718bf1' },
  { data: 'Some data.', salt: 'SUPER-S@LT!', correctResult: 'f565a8fbe0b1b3d36427a3b7e0f0d3d9397f207061785211a0078108773990a0cf501a7bb46fc206e7765b17dc8cafb4c09db45e76a3be81e76828e471b7d45b' },
  { data: undefined, salt: 'SUPER-S@LT!', correctResult: '2b9ffbf1ec1d866eeccaf3627ab934c0d56aca0fcb94c4940bd7960faaeb191ed3fac9f8e9eba0ec52f49e2ff4f504063422a3265ec040cd049fc3f944d006f2' },
  { data: '', salt: 'SUPER-S@LT!', correctResult: '2b9ffbf1ec1d866eeccaf3627ab934c0d56aca0fcb94c4940bd7960faaeb191ed3fac9f8e9eba0ec52f49e2ff4f504063422a3265ec040cd049fc3f944d006f2' }
];

// Define colors.
const { green, red } = CColor;

// Start async thread.
(async () => {
  let testNumberIterator = 1;
  for (const testData of testDataList) {
    // Define current test data.
    const { data, salt, correctResult } = testData;

    // Sync test.
    const saltedHash = saltedSha512(data, salt);
    assert.equal(saltedHash, correctResult, red(`Sync test ${testNumberIterator}: Wrong hash.`));
    console.log(green(`Sync test ${testNumberIterator}: Passed!`));

    // Async test.
    const asyncSaltedHash = await saltedSha512(data, salt, true);
    assert.equal(asyncSaltedHash, correctResult, red(`Async test ${testNumberIterator}: Wrong hash.`));
    console.log(green(`Async test ${testNumberIterator}: Passed!`));

    // Increment test number.
    testNumberIterator++;
  }
})();
